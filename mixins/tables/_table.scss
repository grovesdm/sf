@use "../../vars" as *;

%table {
  width: 100%;
  border-collapse: collapse;

  td {
    padding: 1em;

  }

  /* provide some minimal visual accomodation for IE8 and below */
  tr {
    background: #B8D1F3;
  }

  // Define the background color for all the ODD background rows
  tr:nth-child(odd) {
    background: #B8D1F3;
  }

  /*  Define the background color for all the EVEN background rows  */
  tr:nth-child(even) {
    background: #DAE5F4;
  }
}

@mixin table-01(/////////////////////////
  // CONFIG ///////////////
  /////////////////////////
  $column-width-fixed: false, //<-- SETS COLUMNS TO ALL EQUAL WIDTH
  $table-width: 100%, // SET TABLE WIDTH
  $table-padding: 0.25em 0.5em, // PADDING FOR TEXT INSIDE TABLE CELLS
  $table-stripes: even, // odd || even || null
  //$table-stack-breakpoint
  //$show-header-for-stacked

/////////////////////////
// COLOURS //////////////
/////////////////////////
  $table-background: #F6F6F6,
  $table-color: $col-black,

  $th-background: #EAEAEA,
  $th-color: $col-black,

  $table-row-hover: true, // true || false TABLE MOUSE HOVER EFFECT
  $table-row-striped-background: $th-background,
  $th-row-hover: lighten($th-background, 1%),

/////////////////////////
// BORDERS //////////////
/////////////////////////
//  $table-border: null,
  //$table-has-border: true,
  $table-border-radius: null,
  $table-border-columns: null,
  $table-border-rows: null,


  $thead-border-columns: null,
  $thead-border-row: null, //<-- null || css border

) {
  //////////////////////////////////////////////////
  // TABLE CONTAINER STYLING ///////////////////////
  //////////////////////////////////////////////////
  padding: 2em 0;
  //  //SET WIDTH AND HEIGHT OF CONTAINER TO ENABLE SCROLL
  overflow: auto; //<-- ENABLE SCROLL
  width: 100%;
  //  //height: 200px;

  table {
    min-width: 100%;
    width: $table-width;
    border-collapse: separate; //<-- NEEDS TO BE SEPARATE FOR BORDER RADIUS & BORDER SIZING
    border-spacing: 0; //<-- SECRET SAUCE

    @if ($column-width-fixed) {
      table-layout: fixed;
    }

    p {
      //////////////////////////////////////////////////
      // RESET PADDING INSIDE TABLE ///////////////////
      //////////////////////////////////////////////////
      padding: 0;
      margin: 0;
    }

    @if $table-border-radius {
      //////////////////////////////////////////////////
      // IF BORDER RADIUS TRUE /////////////////////////
      //////////////////////////////////////////////////
      tr {
        &:first-child {
          th:first-child {
            border-top-left-radius: $table-border-radius;
          }

          th:last-child {
            border-top-right-radius: $table-border-radius;
          }
        }

        &:last-child {
          td:first-child {
            border-bottom-left-radius: $table-border-radius;
          }

          td:last-child {
            border-bottom-right-radius: $table-border-radius;
          }
        }
      }
    }

    //////////////////////////////////////////////////
    // GENERAL STYLES ////////////////////////////////
    //////////////////////////////////////////////////

    thead { }

    th {
      /////////////////////////
      // TABLE HEADER /////////
      /////////////////////////
      background-color: $th-background;
      color: $th-color;
      padding: $table-padding;

      text-align: left;
    }

    tr {
      /////////////////////////
      // TABLE ROWS ///////////
      /////////////////////////
      background: $table-background;
      padding: $table-padding;
    }

    td {
      /////////////////////////
      // TABLE DATA ///////////
      /////////////////////////
      padding: $table-padding;
      text-align: left;

    }

    tfoot { }

    @if $table-stripes == even {
      //////////////////////////////////////////////////
      // ADD STRIPES TO TABLE //////////////////////////
      //////////////////////////////////////////////////
      tr:nth-child(odd) {
        /*  Define the background color for all the ODD background rows  */
        background: $table-background;

        @if $table-row-hover {

          &:hover {
            background-color: lighten($table-background, 1%);
          }
        }

      }

      tr:nth-child(even) {
        /*  Define the background color for all the EVEN background rows  */
        background: $table-row-striped-background;

        @if $table-row-hover {
          &:hover {
            background-color: lighten($table-row-striped-background, 1%);
          }
        }
      }

    }

    //////////////////////////////////////////////////
    // BORDERS ///////////////////////////////////////
    //////////////////////////////////////////////////

    @if $thead-border-row {

      th {
        border-top: $thead-border-row;
        border-bottom: $thead-border-row;

      }
    }

    @if $thead-border-columns {

      th {
        //border-bottom: $table-border-columns;
        border-right: $thead-border-columns;

        &:first-child {
          border-left: $thead-border-columns;
        }
      }

    }

    @if $table-border-columns {

      td {
        //border-bottom: $table-border-columns;
        border-right: $table-border-columns;

        &:first-child {
          border-left: $table-border-columns;
        }
      }

    }

    @if $table-border-rows {
      td {
        //border-top: $table-border-rows;
        border-bottom: $table-border-rows;

      }
      th {
        border-bottom: $table-border-rows;
      }

    }
  }
}
